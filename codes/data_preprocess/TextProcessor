

class TextProcessor:
    """
    Class for processing text data using vectorization and optional dimensionality reduction.
    """

    def __init__(self, vectorizer, reducer=None):
        """
        Initializes the TextProcessor with a vectorizer and an optional reducer.

        Parameters:
        vectorizer (BaseVectorizer): The vectorizer to be used for text processing.
        reducer (Reducer, optional): The reducer for dimensionality reduction.
        """
        self.vectorizer = vectorizer
        self.reducer = reducer

    def process(self, texts):
        """
        Processes the given texts through vectorization and optional reduction.

        Parameters:
        texts (list of str): The list of texts to be processed.

        Returns:
        The processed feature matrix.
        """
        features = self.vectorizer.vectorize(texts)
        if self.reducer:
            features = self.reducer.reduce(features)
        return features

    def plot_variance_explained(self):
        """
        Plots the cumulative explained variance ratio for dimensionality reduction.
        Raises an error if reducer is not defined.
        """
        if not self.reducer:
            raise ValueError("Reducer not defined.")
        self.reducer.plot_variance_explained()
